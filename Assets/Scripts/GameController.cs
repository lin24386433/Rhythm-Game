using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class GameController : MonoBehaviour
{
    
    public int[,] notes = new int[804, 4]
    {
        {0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{1,1,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{1,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,1,0},
{0,0,0,0},
{1,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,0,1,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{1,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,1,1,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,1,1,0},
{0,0,0,0},
{0,0,1,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,1,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0}
    };

    public static GameController instance;

    public GameObject notePrefab;

    public GameObject[] spawnPoints;

    public int gameScore = 0;
    public int combo = 0;

    public Text timingTxt;
    public Text scoreTxt;
    public Text comboTxt;

    public float timeBeforeStart;

    //Song beats per minute
    //This is determined by the song you're trying to sync up to
    public float songBpm;

    //The number of seconds for each song beat
    public float secPerBeat;

    //The number of beats for each second
    public float beatPerSec;

    //Current song position, in seconds
    public float songPosition;

    //Current song position, in beats
    public float songPositionInBeats;

    //How many seconds have passed since the song started
    public float dspSongTime;

    //an AudioSource attached to this GameObject that will play the music.
    public AudioSource musicSource;

    public float musicLength;

    public int beatNow;

    public int totalBeats;

    private void Start()
    {
        instance = this;

        //Load the AudioSource attached to the Conductor GameObject
        musicSource = GetComponent<AudioSource>();

        musicLength = musicSource.clip.length;

        totalBeats = (Mathf.RoundToInt((songBpm * musicLength) / 60));
        
        //Calculate the number of seconds in each beat
        secPerBeat = 60f / songBpm;

        beatPerSec = songBpm / 60f;

        //Record the time when the music starts
        dspSongTime = (float)AudioSettings.dspTime;

        timeBeforeStart = (((10 / secPerBeat) + 1) * secPerBeat) / beatPerSec;

        StartCoroutine(WaitForStart(timeBeforeStart));

    }

    void Update()
    {
        //determine how many seconds since the song started
        songPosition = (float)(AudioSettings.dspTime - dspSongTime);

        //determine how many beats since the song started
        songPositionInBeats = songPosition / secPerBeat;

        beatNow = (int)songPositionInBeats;

        for(int k = 0; k < 804; k++)
        {
            if(beatNow == k)
            {
                for (int i = 0; i <= 3; i++)
                {
                    if (notes[k, i] == 1)
                    {
                        notes[k, i] = 0;
                        Instantiate(notePrefab, spawnPoints[i].transform.position + new Vector3(0, ((10 / secPerBeat) + 1) * secPerBeat, 0), spawnPoints[i].transform.rotation);
                    }
                }
            }
        }

        scoreTxt.text = "Score : " + gameScore;
        comboTxt.text = "Combo : " + combo;
    }

    IEnumerator WaitForStart(float mytime)
    {
        yield return new WaitForSeconds(mytime);
        //Start the music
        musicSource.Play();
    }
}

